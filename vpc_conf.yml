---
- name: vscl to vpc conf
  hosts: all

  tasks:
    - block: #=====Debian Family=====#

      - name: Add signing key
        apt_key:
          url: http://repo.os.selectel.org/selectel-openstack.key
          state: present

      - block: #=====Ubuntu 16.04 xenial=====#
        
        - apt_repository:
            repo: deb http://repo.vscale.io/ xenial main
            state: absent

        - apt_repository:
            repo: deb http://repo.os.selectel.org xenial main
            state: present
            update_cache: yes
      
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
      
      - block: #=====Debian 9 stretch=====#

        - apt_repository:
            repo: deb http://repo.vscale.io/ stretch main
            state: absent

        - apt_repository:
            repo: deb http://repo.os.selectel.org stretch main
            state: present
            update_cache: yes

        when: ansible_distribution == 'Debian' and ansible_distribution_release == 'stretch'

      - name: disable services
        systemd: 
          name: "{{ item }}"
          state: stopped
          enabled: no
          daemon_reload: yes
        loop:
          - scarlet-init-early.service
          - scarlet-init.service
        ignore_errors: yes

      - name: Uninstall scarlet-init
        apt: 
          name: scarlet-init
          state: absent
          autoremove: yes
          purge: yes

      - name: del scarlet folders
        file: 
          path: "{{ item }}" 
          state: absent
        with_items:
          - /var/log/scarlet-init/
          - /var/lib/scarlet-init/
          - /etc/init/scarlet-init.override
          - /etc/init/scarlet-init-early.override

      - name: Install cloud-init
        apt: 
          name: "{{ item }}"
          state: present
          force: yes
          #allow_unauthenticated: yes
          install_recommends: yes
        with_items:
          - set-root-pw
          - fstrim-blocks
          - crontab-randomizer
          - qemu-guest-agent
          - cloud-init
          - net-tools

      - block: #=====cloud-init configs=====#

        - name: copy ubuntu_16 config files
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
          with_items:
            - {src: './templates/ubuntu_16.04/10_no_default_users.cfg',dest: '/etc/cloud/cloud.cfg.d/10_no_default_users.cfg'}
            - {src: './templates/ubuntu_16.04/91-dib-cloud-init-datasources.cfg',dest: '/etc/cloud/cloud.cfg.d/91-dib-cloud-init-datasources.cfg'}
            - {src: './templates/ubuntu_16.04/92-ec2-datasource.cfg',dest: '/etc/cloud/cloud.cfg.d/92-ec2-datasource.cfg'}
            - {src: './templates/ubuntu_16.04/99_boot_routines.cfg',dest: '/etc/cloud/cloud.cfg.d/99_boot_routines.cfg'}
            - {src: './templates/ubuntu_16.04/99_enable_ec2.cfg',dest: '/etc/cloud/cloud.cfg.d/99_enable_ec2.cfg'}
            - {src: './templates/ubuntu_16.04/99_first_boot_routines.cfg',dest: '/etc/cloud/cloud.cfg.d/99_first_boot_routines.cfg'}
            - {src: './templates/ubuntu_16.04/99_keep_root_user.cfg',dest: '/etc/cloud/cloud.cfg.d/99_keep_root_user.cfg'}
            - {src: './templates/ubuntu_16.04/99_location.cfg',dest: '/etc/cloud/cloud.cfg.d/99_location.cfg'}
            - {src: './templates/ubuntu_16.04/99_ssh_settings.cfg',dest: '/etc/cloud/cloud.cfg.d/99_ssh_settings.cfg'}
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'

        - name: copy Debian_9 config files
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
          with_items:
            - {src: './templates/debian_9/05_logging.cfg',dest: '/etc/cloud/cloud.cfg.d/05_logging.cfg'}
            - {src: './templates/debian_9/10_no_default_users.cfg',dest: '/etc/cloud/cloud.cfg.d/10_no_default_users.cfg'}
            - {src: './templates/debian_9/99_enable_ec2.cfg',dest: '/etc/cloud/cloud.cfg.d/99_enable_ec2.cfg'}
            - {src: './templates/debian_9/99_first_boot_routines.cfg',dest: '/etc/cloud/cloud.cfg.d/99_first_boot_routines.cfg'}
            - {src: './templates/debian_9/99_keep_root_user.cfg',dest: '/etc/cloud/cloud.cfg.d/99_keep_root_user.cfg'}
            - {src: './templates/debian_9/99_location.cfg',dest: '/etc/cloud/cloud.cfg.d/99_location.cfg'}
            - {src: './templates/debian_9/99_selectel_mirror.cfg',dest: '/etc/cloud/cloud.cfg.d/99_selectel_mirror.cfg'}
            - {src: './templates/debian_9/99_ssh_settings.cfg',dest: '/etc/cloud/cloud.cfg.d/99_ssh_settings.cfg'}          
          when: ansible_distribution == 'Debian' and ansible_distribution_release == 'stretch'

        when: ansible_os_family == "Debian"
    
      - name: Service cloud-init start
        service: 
          name: "{{ item }}"
          enabled: yes
          state: started
        with_items:
          - qemu-guest-agent
          - cloud-init
          - cloud-init-local
          - cloud-config
          - cloud-final
        #notify: Restart server

      - name: copy Grub config files
        copy:
          src: "./templates/ubuntu_16.04/grub_ubuntu.txt"
          dest: "/etc/default/grub"
          force: yes
        notify: "Write grub"
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
          
      when: ansible_os_family == "Debian"
     
  handlers:
  - name: Restart server
    command: /sbin/shutdown -r +1
    async: 0
    poll: 0
    ignore_errors: true

  - name: Write grub configuration file
    command: grub-mkconfig -o /boot/grub/grub.cfg
    register: command_output
    listen: "Write grub"

  - name: print result grub conf
    debug: var=command_output
    listen: "Write grub"